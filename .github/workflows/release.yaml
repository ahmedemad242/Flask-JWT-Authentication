name: Build a docker image and push it to AWS ECR

on:
  release:
    types: [published]

jobs:
  lint-test:
    name: Test and lint
    uses: ./.github/workflows/development.yaml

  build-push:
    name: Build and push
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [lint-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract tag
        shell: bash
        run: echo "release_tag=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_OUTPUT
        id: extract_tag
        
      - name: Add .env secrets
        run: |
          echo 'FLASK_APP=${{ secrets.FLASK_APP }}' >> .env
          echo 'FLASK_ENV=${{ secrets.FLASK_ENV }}' >> .env
          echo 'SECRET_KEY=${{ secrets.SECRET_KEY }}' >> .env
          echo 'DB_USER=${{ secrets.DB_USER }}' >> .env
          echo 'DB_PASSWORD=${{ secrets.DB_PASSWORD }}' >> .env
          echo 'DB_HOST=${{ secrets.DB_HOST }}' >> .env
          echo 'DB_PORT=${{ secrets.DB_PORT }}' >> .env
          echo 'DB_NAME=${{ secrets.DB_NAME }}' >> .env


      - name: Build, tag, and push image to amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: flask-jwt
          IMAGE_TAG: ${{ steps.extract_tag.outputs.release_tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      - name: Logout of amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
